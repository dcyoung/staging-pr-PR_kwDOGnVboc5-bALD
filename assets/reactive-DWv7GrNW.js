import{r as M,a9 as U,M as V,c as q,d as F,b as J,j as n,g as L,h as X,V as Y}from"./index-Bc3O-PEo.js";import{G as B}from"./ground-CY9CAd_c.js";import{e as O,c as S,l as _}from"./easing-BzOxJDJb.js";const H=({scalarTracker:c,nBoxes:e=5,gridSize:x=10,cellSize:o=.25})=>{const u=x,m=x,g=M.useMemo(()=>new U(.65,150,2*250),[250]),i=M.useRef(null),h=M.useMemo(()=>new V,[]),D=q(),C=F.getPalette(D).buildLut(),a=M.useMemo(()=>Array.from({length:e},s=>{const r=Math.floor(u*Math.random()),l=Math.floor(m*Math.random());return{fromRow:r,fromCol:l,toRow:r,toCol:l}}),[e,u,m]);return M.useEffect(()=>{for(let s=0;s<e;s++)i.current.setColorAt(s,C.getColor(s/(e-1)));i.current.instanceColor.needsUpdate=!0},[C,e]),J(()=>{if(g.step((c==null?void 0:c.get())??0)){const[w,p]=Math.random()>.5?[!0,!1]:[!1,!0];for(let t=0;t<e;t++)a[t].fromRow=a[t].toRow,a[t].fromCol=a[t].toCol,w&&(a[t].toRow+=Math.random()>.5?1:-1),p&&(a[t].toCol+=Math.random()>.5?1:-1)}const s=O(S(g.timeSinceLastEventMs/250)),r=_(Math.PI/4,3*Math.PI/4,s),l=-.5*o*Math.cos(r)/Math.sqrt(2),E=.5*o*Math.sin(r)/Math.sqrt(2);let R,j,P,b,v,f,d;a.forEach(({fromRow:w,fromCol:p,toRow:t,toCol:I},y)=>{f=t-w,d=I-p;const A=w+f*(l+.5),G=p+d*(l+.5);f!==0&&h.makeRotationY((r-Math.PI/4)*f),d!==0&&h.makeRotationX(-(r-Math.PI/4)*d),R=A/(u-1),j=G/(m-1),P=u*o*(R-.5),b=m*o*(j-.5),v=E-o/4,h.setPosition(P,b,v),i.current.setMatrixAt(y,h)}),i.current.instanceMatrix.needsUpdate=!0}),n.jsxs("instancedMesh",{ref:i,castShadow:!0,receiveShadow:!0,args:[new L,new X,e],children:[n.jsx("boxGeometry",{attach:"geometry",args:[o,o,o,1]}),n.jsx("meshBasicMaterial",{attach:"material",color:"white",toneMapped:!1})]})},Z=({scalarTracker:c})=>n.jsxs(n.Fragment,{children:[n.jsx(H,{scalarTracker:c??{get:()=>Math.sin(.0025*Date.now())+1,set:()=>{}},nBoxes:200,gridSize:100,cellSize:1}),n.jsx(B,{position:new Y(0,0,-1/2)})]});export{Z as default};
